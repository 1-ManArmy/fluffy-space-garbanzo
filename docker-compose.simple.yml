# Simple Docker Compose for OneLastAI - Core Services Only
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: onelastai_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=onelastai_production
      - POSTGRES_USER=onelastai
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-your_secure_postgres_password_here}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U onelastai -d onelastai_production"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: onelastai_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Rails Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: onelastai_app
    restart: unless-stopped
    environment:
      - RAILS_ENV=production
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - DATABASE_URL=postgresql://onelastai:${POSTGRES_PASSWORD:-your_secure_postgres_password_here}@postgres:5432/onelastai_production
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "3000:3000"
    volumes:
      - app_storage:/app/storage
      - app_logs:/app/log
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Sidekiq for Background Jobs
  sidekiq:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: onelastai_sidekiq
    restart: unless-stopped
    environment:
      - RAILS_ENV=production
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - DATABASE_URL=postgresql://onelastai:${POSTGRES_PASSWORD:-your_secure_postgres_password_here}@postgres:5432/onelastai_production
      - REDIS_URL=redis://redis:6379/0
    command: bundle exec sidekiq
    volumes:
      - app_storage:/app/storage
      - app_logs:/app/log
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_network

volumes:
  postgres_data:
  redis_data:
  app_storage:
  app_logs:

networks:
  app_network:
    driver: bridge
